AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Serverless Specification

Resources:
  PhotoAlbumS3B2:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: "assignment2-kerem-nana-photos"
    DeletionPolicy: "Retain"  

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: "assignment2-kerem-nana-photos"
      PolicyDocument: {
        "Version": "2012-10-17",
        "Id": "MyPolicy",
        "Statement": [
          {
           "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::assignment2-kerem-nana-photos/*"
          },
          {
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:PutObject",
            "Resource": "arn:aws:s3:::assignment2-kerem-nana-photos/*"
          }
        ]
      }

  LF1:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      CodeUri: ./index-photos
      Description: ''
      MemorySize: 128
      Timeout: 15
      Role: 'arn:aws:iam::395718007070:role/service-role/rekognition'
      Events:
        BucketEvent1:
          Type: S3
          Properties:
            Bucket:
              Ref: PhotoAlbumS3B2
            Events:
              - 's3:ObjectCreated:Put'

  LF2:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      CodeUri: ./search-photos
      Description: Function for searching for indexed photos
      MemorySize: 128
      Timeout: 15
      Role: 'arn:aws:iam::395718007070:role/service-role/search-photos-role-hw74j5wv'
      # Events:
      #   Api1:
      #     Type: Api
      #     Properties:
      #       Path: /search
      #       Method: GET
      Environment:
        Variables:
          Region: us-east-1
